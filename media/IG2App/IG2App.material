material Plano {
    technique { // first, preferred technique
        pass { // first pass
            diffuse 0.5 0.5 0.5
            ambient 0.5 0.5 0.5
            specular 0.5 0.5 0.5 100
            texture_unit {
                texture Water02.jpg 2d
                colour_op add
                scroll_anim 0.1 0.0
            }
        }
    }
}

// ----------------------------------------------------------------FRACTAL---------------------------------------------------

vertex_program vertexShaderE2 glsl
{ // params ‐> default_params
    source vertexShaderE2glsl.txt // archivo del código
    default_params // valores para las variable uniform
    {
        param_named_auto modelViewProjMat worldviewproj_matrix
        param_named_auto timeA time_0_1 10
    }
}
    

fragment_program fragmentShaderE2 glsl
{ // params ‐> default_params
    source fragmentShaderE2glsl.txt // archivo
    default_params // valores para las variable uniform
    {
        param_named textura1 int 0 // unidad de textura
        param_named textura2 int 1
        //param_named FB float 0.5
        //param_named intLuz float 1.0
    }
}

material ejemploShadersE2 {

    technique {
        pass {

        vertex_program_ref vertexShaderE2
        { // params ‐> default_params
        }

        fragment_program_ref fragmentShaderE2
        { // params ‐> default_params
        }

        texture_unit texture1 {
            texture spaceSky.jpg 2d // archivo
            //tex_address_mode clamp
            filtering bilinear
        }

        texture_unit texture2 {
            texture flare.png 2d // archivo
            tex_address_mode wrap
        }

        }
    } 
}

// ---------------------------------------------------------------------AGUJEROS_TOY-----------------------------------------------

vertex_program ToyVS glsl
{ // params ‐> default_params
    source ToyVS.txt // archivo del código
    default_params // valores para las variable uniform
    {
        param_named_auto modelViewProjMat worldviewproj_matrix
        param_named_auto inverseTranspose inverse_transpose_world_matrix
    }
}
    

fragment_program ToyFS glsl
{ // params ‐> default_params
    source ToyFS.txt // archivo
    default_params // valores para las variable uniform
    {
        param_named_auto lightPos light_position 0
        param_named_auto intLuz light_diffuse_colour 0
        param_named textura1 int 0 // unidad de textura
    }
}

material Toy {
    technique { // first, preferred technique
        pass { // first pass
            vertex_program_ref ToyVS
            { // params ‐> default_params
            }

            fragment_program_ref ToyFS
            { // params ‐> default_params
            }
            
            cull_hardware none
            cull_software none
            texture_unit {
                texture corrosion.jpg 2d
            }
        }
    }
}


//----------------------------------------------------------COMPOSITOR-------------------------------------

vertex_program LuminanceVS glsl
{
    source vertexShaderSimple.txt //reutilizamos del vertexShaderSimple

    default_params
    {
        param_named_auto modelViewProjMat worldviewproj_matrix
    }
}

fragment_program LuminancePS glsl
{
    source LuminancePS.txt
    default_params{
        param_named RTT0 int 0 //textura con la escena
    }
}


material LuminancePS{
    technique{
        pass{
            depth_check off //descativamos el depth-buffer
            depth_write off

            vertex_program_ref LuminanceVS{

            }

            fragment_program_ref LuminancePS{

            }

            texture_unit RTT0{
                //sin imagen de archivo -> render target previo
                filtering none //resolucion del viewport
            }
        }
    }
}